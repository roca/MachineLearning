[bdist_wheel]
universal = 1

[metadata]
name = msal
version = attr: msal.__version__
description = The Microsoft Authentication Library (MSAL) for Python library enables your app to access the Microsoft Cloud by supporting authentication of users with Microsoft Azure Active Directory accounts (AAD) and Microsoft Accounts (MSA) using industry standard OAuth2 and OpenID Connect.
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
author = Microsoft Corporation
author_email = nugetaad@microsoft.com
url = https://github.com/AzureAD/microsoft-authentication-library-for-python
classifiers = 
	Development Status :: 5 - Production/Stable
	Programming Language :: Python
	Programming Language :: Python :: 2
	Programming Language :: Python :: 2.7
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.5
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Programming Language :: Python :: 3.12
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
project_urls = 
	Changelog = https://github.com/AzureAD/microsoft-authentication-library-for-python/releases
	Documentation = https://msal-python.readthedocs.io/
	Questions = https://stackoverflow.com/questions/tagged/azure-ad-msal+python
	Feature/Bug Tracker = https://github.com/AzureAD/microsoft-authentication-library-for-python/issues

[options]
include_package_data = False  # We used to ship LICENSE, but our __init__.py already mentions MIT
packages = find:
python_requires = >=2.7
install_requires = 
	requests>=2.0.0,<3
	
	PyJWT[crypto]>=1.0.0,<3
	
	cryptography>=0.6,<44
	
	mock; python_version<'3.3'

[options.extras_require]
broker = 
	pymsalruntime>=0.13.2,<0.14; python_version>='3.6' and platform_system=='Windows'

[options.packages.find]
exclude = 
	tests

[egg_info]
tag_build = 
tag_date = 0

