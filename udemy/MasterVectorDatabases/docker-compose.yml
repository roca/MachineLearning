version: '3.5'

services:

  python:
    privileged: true
    container_name: python
    image: tensorflow/tensorflow:latest-jupyter
    environment:
      - PYDEVD_DISABLE_FILE_VALIDATION=1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ALLOW_RESET=${ALLOW_RESET}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_ENDPOINT=${AZURE_ENDPOINT}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_APPLICATION_SCOPE=${AZURE_APPLICATION_SCOPE}
      - SVC_ACCOUNT=${SVC_ACCOUNT}
      - SVC_PASSWORD=${SVC_PASSWORD}
      - OPENAI_API_TYPE=${OPENAI_API_TYPE}
      - OPENAI_API_BASE=${OPENAI_API_BASE}
      - OPENAI_API_VERSION=${OPENAI_API_VERSION}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - MONGOID_DATABASE_HOST1=${MONGOID_DATABASE_HOST1}
      - MONGOID_DATABASE_HOST2=${MONGOID_DATABASE_HOST2}
      - MONGOID_DATABASE_HOST3=${MONGOID_DATABASE_HOST3}
      - MONGOID_DATABASE=${MONGOID_DATABASE}
      - BIOREGISTRY_USER=${BIOREGISTRY_USER}
      - BIOREGISTRY_PASSWORD=${BIOREGISTRY_PASSWORD}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
    ports:
      - "8888:8888"
    volumes:
      - ./python:/tf
    working_dir: /tf
    depends_on:
      # - "chroma"
      # - "etcd"
      # - "minio"
      # - standalone
      - attu

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    environment:
      - ALLOW_RESET=TRUE
    volumes:
      - ./index_data:/chroma/.chroma/index
      - ./cache:/root/.cache
    ports:
      - 8000:8000

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2379/health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.5
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
      - ${DOCKER_VOLUME_DIRECTORY:-.}/milvus.yaml:/milvus/configs/milvus.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  attu:
    container_name: attu
    image: zilliz/attu:v2.3.1
    environment:
      MILVUS_URL: 127.0.0.1:19530
    ports:
      - "8000:3000"
    depends_on:
      - "standalone"

  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:latest
    environment:
      - ALLOW_RESET=TRUE
    ports:
      - "6333:6333"
